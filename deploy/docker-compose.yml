version: '3.8'

services:
  db:
    image: postgres:15-alpine
    container_name: tadata-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB:-tadata}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    # No external port - internal network only
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - tadata-network

  server:
    image: ghcr.io/secondwavetech/tadata-ce/tadata-server:${SERVER_IMAGE_TAG:-latest}
    container_name: tadata-server
    environment:
      NODE_ENV: production
      SERVER_PORT: 3001
      SERVER_BASE_URL: http://server:3001
      EDITION_TYPE: ${EDITION_TYPE:-COMMUNITY}
      AUTH_MODE: ${AUTH_MODE:-single-user}
      AUTH_TYPE: ${AUTH_TYPE:-local}
      PAYMENT_ENABLED: ${PAYMENT_ENABLED:-false}
      DATABASE_HOST: db
      DATABASE_PORT: 5432
      DATABASE_USERNAME: ${POSTGRES_TADATA_USER:-tadatauser}
      DATABASE_PASSWORD: ${POSTGRES_TADATA_PASSWORD}
      DATABASE_NAME: ${POSTGRES_DB:-tadata}
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB:-tadata}
      POSTGRES_TADATA_USER: ${POSTGRES_TADATA_USER:-tadatauser}
      POSTGRES_TADATA_PASSWORD: ${POSTGRES_TADATA_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      ENCRYPTION_KEY: ${ENCRYPTION_KEY}
      INTERNAL_API_SECRET: ${INTERNAL_API_SECRET:-${JWT_SECRET}}
      DOWNLOAD_TOKEN_SECRET: ${DOWNLOAD_TOKEN_SECRET:-${JWT_SECRET}}
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY}
      FUNCTION_EXECUTOR_URL: http://function-executor:3002
      FAAS_URL: http://faas:3000
    # No external port - accessed via client proxy only
    depends_on:
      db:
        condition: service_healthy
      faas:
        condition: service_started
      function-executor:
        condition: service_started
    volumes:
      - conversation-files:/var/tadata_data/conversation-files
      - lancedb-data:/tadata/data/lancedb
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3001/"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks:
      - tadata-network
    command: >
      sh -c "npm run migration:run:prod &&
             /database/scripts/init_tadata_user_docker.sh &&
             npm run start:prod"

  function-executor:
    image: ghcr.io/secondwavetech/tadata-ce/tadata-function-executor:${FUNCTION_EXECUTOR_IMAGE_TAG:-latest}
    container_name: tadata-function-executor
    environment:
      NODE_ENV: production
      PORT: 3002
      EDITION_TYPE: ${EDITION_TYPE:-COMMUNITY}
      DATABASE_HOST: db
      DATABASE_PORT: 5432
      DATABASE_USERNAME: ${POSTGRES_TADATA_USER:-tadatauser}
      DATABASE_PASSWORD: ${POSTGRES_TADATA_PASSWORD}
      DATABASE_NAME: ${POSTGRES_DB:-tadata}
      JWT_SECRET: ${JWT_SECRET}
      ENCRYPTION_KEY: ${ENCRYPTION_KEY}
      FAAS_PROVIDER: faas
      FAAS_SERVER_URL: http://faas:3000
    # No external port - internal network only
    depends_on:
      db:
        condition: service_healthy
      faas:
        condition: service_started
    volumes:
      - functions-data:/app/functions
    restart: unless-stopped
    networks:
      - tadata-network

  faas:
    image: ghcr.io/secondwavetech/tadata-ce/tadata-faas:${FAAS_IMAGE_TAG:-latest}
    container_name: tadata-faas
    # No external port - internal network only
    volumes:
      - functions-data:/var/functions
    restart: unless-stopped
    networks:
      - tadata-network

  client:
    image: ghcr.io/secondwavetech/tadata-ce/tadata-client:${CLIENT_IMAGE_TAG:-latest}
    container_name: tadata-client
    environment:
      # API proxy target (nginx will proxy /api/ requests to this URL)
      API_URL: http://server:3001/api/
    ports:
      - "${CLIENT_PORT:-3000}:80"
    depends_on:
      - server
    restart: unless-stopped
    networks:
      - tadata-network

volumes:
  postgres-data:
    name: tadata-ce_postgres-data
  functions-data:
    name: tadata-ce_functions-data
  conversation-files:
    name: tadata-ce_conversation-files
  lancedb-data:
    name: tadata-ce_lancedb-data

networks:
  tadata-network:
    name: tadata-network
    driver: bridge
